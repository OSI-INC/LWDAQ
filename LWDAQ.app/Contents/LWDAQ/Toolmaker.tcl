<script>

</script>

<script>
# Script 4
# Read in tracker output files generated by the exporter, but modified to have
# the tracker sample rate in the first line, calculate speed, run through a
# recursive filter with a specified time constant, and so generate a smoothed 
# speed measurement. Combine data from multiple channels, each of which has its
# own export file.
set time_constant 5
set output_rate 1.0
set channel_list [list]
set output_period [expr 1.0/$output_rate]

set fnl [LWDAQ_get_file_name 1]

foreach fn $fnl {
	set f [open $fn r]
	set contents [split [string trim [read $f]] \n]
	close $f

	if {[regexp {T[0-9]{10}_([0-9]+)\.txt} [file tail $fn] match channel_num]} {
		LWDAQ_print $t "Channel Number: $channel_num"
		set sample_rate [lindex $contents 0]
		LWDAQ_print $t "Sample Rate: $sample_rate"
	} {
		LWDAQ_print $t "ERROR: No channel number in file name [file tail $fn]."
		continue
	}  

	lappend channel_list $channel_num
	set output_$channel_num [list]

	LWDAQ_print $t "Going through [file tail $fn]..."

	set b_0 [expr 1.0/$sample_rate/$time_constant]
	set a_1 [expr 1.0 - $b_0]
	LWDAQ_print $t "Recursive constants\
		a_1 = [format %.4f $a_1],\
		b_0 = [format %.4f $b_0]."

	set output_time "0.00"
	set output_value "0.00"
	lappend output_$channel_num "$output_value"

	for {set i 2} {$i < [llength $contents]} {incr i} {
		set input_time [expr 1.0 * ($i - 1) / $sample_rate]
		set x2 [lindex $contents $i 0]
		set y2 [lindex $contents $i 1]
		set x1 [lindex $contents [expr $i - 1] 0]
		set y1 [lindex $contents [expr $i - 1] 1]
		set movement [expr sqrt(($x2-$x1)*($x2-$x1) + ($y2-$y1)*($y2-$y1))]
		set speed [expr $movement]
		set output_value [expr $output_value * $a_1 + $speed * $b_0]
		if {$input_time - $output_time >= $output_period} {
			set output_time [expr $output_time + $output_period]
			lappend output_$channel_num "[format %.2f $output_value]"
		}
		LWDAQ_support
	}	
	LWDAQ_print $t "Reached time [format %.2f $output_time]."
}
LWDAQ_print -nonewline $t "Time "
foreach channel_num $channel_list {
	LWDAQ_print -nonewline $t "$channel_num "
}
LWDAQ_print $t
set i 0
set done 0
while {!$done} {
	set output_time [expr 1.0 * $i / $output_rate]
	LWDAQ_print -nonewline $t "[format %.2f $output_time] "
	set done 1
	foreach channel_num $channel_list {
		if {$i < [llength [set output_$channel_num]]} {
			LWDAQ_print -nonewline $t "[format %.2f [lindex [set output_$channel_num] $i]] "
			set done 0
		} {
			LWDAQ_print -nonewline $t "0.00 "
		}
	}	
	LWDAQ_print $t
	LWDAQ_support
	incr i
}
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
set sr 8
LWDAQ_print $fn $sr
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "$i 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 $i"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 25} {incr $i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 [expr 0.01*(100-$i)*(100-$i)]"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
set sr 8
LWDAQ_print $fn $sr
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "$i 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 $i"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 25} {incr $i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 [expr 0.01*(100-$i)*(100-$i)]"
}
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
set sr 8
LWDAQ_print $fn $sr
LWDAQ_print $t "Writing to $fn..."
LWDAQ_print $t "Stop 1"
LWDAQ_support

for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope x"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "$i 0.0"
}
LWDAQ_print $t "Stop 2"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope y"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 $i"
}
LWDAQ_print $t "Stop 3"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Jitter"
LWDAQ_support
for {set i 0} {$i < $sr * 25} {incr $i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Stop 4"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Acceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
LWDAQ_print $t "Deceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 [expr 0.01*(100-$i)*(100-$i)]"
}
LWDAQ_print $t "Stop 5"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr $i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Done"
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
set sr 8
LWDAQ_print $fn $sr
LWDAQ_print $t "Writing to $fn..."
LWDAQ_print $t "Stop 1"
LWDAQ_support

for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope x"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "$i 0.0"
}
LWDAQ_print $t "Stop 2"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope y"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 $i"
}
LWDAQ_print $t "Stop 3"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Jitter"
LWDAQ_support
for {set i 0} {$i < $sr * 25} {incr i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Stop 4"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Acceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
LWDAQ_print $t "Deceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*(100-$i)*(100-$i)]"
}
LWDAQ_print $t "Stop 5"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Done"
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
catch {file delete $fn}
set sr 8
LWDAQ_print $fn $sr
LWDAQ_print $t "Writing to $fn..."
LWDAQ_print $t "Stop 1"
LWDAQ_support

for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope x"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "$i 0.0"
}
LWDAQ_print $t "Stop 2"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope y"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 $i"
}
LWDAQ_print $t "Stop 3"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Jitter"
LWDAQ_support
for {set i 0} {$i < $sr * 25} {incr i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Stop 4"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Acceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
LWDAQ_print $t "Deceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*(100-$i)*(100-$i)]"
}
LWDAQ_print $t "Stop 5"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Done"
</script>

<script>
# Script 4
# Read in tracker output files generated by the exporter, but modified to have
# the tracker sample rate in the first line, calculate speed, run through a
# recursive filter with a specified time constant, and so generate a smoothed 
# speed measurement. Combine data from multiple channels, each of which has its
# own export file.
set time_constant 5
set output_rate 1.0
set channel_list [list]
set output_period [expr 1.0/$output_rate]

set fnl [LWDAQ_get_file_name 1]

foreach fn $fnl {
	set f [open $fn r]
	set contents [split [string trim [read $f]] \n]
	close $f

	if {[regexp {T[0-9]{10}_([0-9]+)\.txt} [file tail $fn] match channel_num]} {
		LWDAQ_print $t "Channel Number: $channel_num"
		set sample_rate [lindex $contents 0]
		LWDAQ_print $t "Sample Rate: $sample_rate"
	} {
		LWDAQ_print $t "ERROR: No channel number in file name [file tail $fn]."
		continue
	}  

	lappend channel_list $channel_num
	set output_$channel_num [list]

	LWDAQ_print $t "Going through [file tail $fn]..."

	set b_0 [expr 1.0/$sample_rate/$time_constant]
	set a_1 [expr 1.0 - $b_0]
	LWDAQ_print $t "Recursive constants\
		a_1 = [format %.4f $a_1],\
		b_0 = [format %.4f $b_0]."

	set output_time "0.00"
	set output_value "0.00"
	lappend output_$channel_num "$output_value"

	for {set i 2} {$i < [llength $contents]} {incr i} {
		set input_time [expr 1.0 * ($i - 1) / $sample_rate]
		set x2 [lindex $contents $i 0]
		set y2 [lindex $contents $i 1]
		set x1 [lindex $contents [expr $i - 1] 0]
		set y1 [lindex $contents [expr $i - 1] 1]
		set movement [expr sqrt(($x2-$x1)*($x2-$x1) + ($y2-$y1)*($y2-$y1))]
		set speed [expr $movement]
		set output_value [expr $output_value * $a_1 + $speed * $b_0]
		if {$input_time - $output_time >= $output_period} {
			set output_time [expr $output_time + $output_period]
			lappend output_$channel_num "[format %.2f $output_value]"
		}
		LWDAQ_support
	}	
	LWDAQ_print $t "Reached time [format %.2f $output_time]."
}
LWDAQ_print -nonewline $t "Time "
foreach channel_num $channel_list {
	LWDAQ_print -nonewline $t "$channel_num "
}
LWDAQ_print $t
set i 0
set done 0
while {!$done} {
	set output_time [expr 1.0 * $i / $output_rate]
	LWDAQ_print -nonewline $t "[format %.2f $output_time] "
	set done 1
	foreach channel_num $channel_list {
		if {$i < [llength [set output_$channel_num]]} {
			LWDAQ_print -nonewline $t "[format %.2f [lindex [set output_$channel_num] $i]] "
			set done 0
		} {
			LWDAQ_print -nonewline $t "0.00 "
		}
	}	
	LWDAQ_print $t
	LWDAQ_support
	incr i
}
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
catch {file delete $fn}
set sr 8
LWDAQ_print $fn $sr
LWDAQ_print $t "Writing to $fn..."
LWDAQ_print $t "Stop 1"
LWDAQ_support

for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope x"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "$i 0.0"
}
LWDAQ_print $t "Stop 2"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope y"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 $i"
}
LWDAQ_print $t "Stop 3"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Jitter"
LWDAQ_support
for {set i 0} {$i < $sr * 25} {incr i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Stop 4"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Acceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
LWDAQ_print $t "Deceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*(100-$i)*(100-$i)]"
}
LWDAQ_print $t "Stop 5"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Done"
</script>

<script>
# Script 5
# Generate test tracker output. 
set fn [LWDAQ_put_file_name T0000000000_225.txt]
catch {file delete $fn}
set sr 8
LWDAQ_print $fn $sr
LWDAQ_print $t "Writing to $fn..."
LWDAQ_print $t "Stop 1"
LWDAQ_support

for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope x"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "$i 0.0"
}
LWDAQ_print $t "Stop 2"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Slope y"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 $i"
}
LWDAQ_print $t "Stop 3"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Jitter"
LWDAQ_support
for {set i 0} {$i < $sr * 25} {incr i} {
	LWDAQ_print $fn "1.0 0.0"
	LWDAQ_print $fn "0.0 0.0"
	LWDAQ_print $fn "0.0 1.0"
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Stop 4"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Acceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*$i*$i]"
}
LWDAQ_print $t "Deceleration"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 [expr 0.01*($sr*100-$i)*($sr*100-$i)]"
}
LWDAQ_print $t "Stop 5"
LWDAQ_support
for {set i 0} {$i < $sr * 100} {incr i} {
	LWDAQ_print $fn "0.0 0.0"
}
LWDAQ_print $t "Done"
</script>

