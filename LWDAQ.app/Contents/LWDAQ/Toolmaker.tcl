<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

LWDAQ_print $t $data
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	LWDAQ_print $t $n
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	LWDAQ_print $t "$n [expr $n] [binary format H4 $value]"
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	LWDAQ_print $t "$n [expr $n] [binary format H4 $n]"
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	LWDAQ_print $t "$n [expr $n]"
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	LWDAQ_print $t "$n [expr $n] [binary format H4 [expr $n]]"
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	binary scan [expr $n] S b
	LWDAQ_print $t "$n [expr $n] $b"
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	binary scan [expr $n] B b
	LWDAQ_print $t "$n [expr $n] $b"
}
</script>

<script>
set data {0x6080
0x6480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0xC480
0x8480
0xC480
0x8480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4480
0x0480
0x4080}

foreach n $data {
	binary scan [expr $n] B b*
	LWDAQ_print $t "$n [expr $n] $b"
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

foreach n $data {
	binary scan [expr $n] B b*
	LWDAQ_print $t "$n [expr $n] $b"
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

foreach n $data {
	binary scan [expr $n] B b
	LWDAQ_print $t "$n [expr $n] $b"
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print $t "$n [expr $n] $b"
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n" green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[string index $b $i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[string index $b $i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 32 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 32 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 31 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 31 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format h4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format h4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step $b " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format H4 [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step $b " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step $b " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step $b " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step $b " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x4080 0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x4080 0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x4080 0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x4080 0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x4080 0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0x4480 0x0480 0xC480 0x8480 0x4480 0x0480 0xC480 \
	0x8480 0x4480 0x0480 0xC480 0x8480 0x4480 0x0480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0x4480 0x0480 0x0080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 30 - 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i] + 2*$i] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i]] "
	}
	LWDAQ_print $t
	incr step
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i]] "
	}
	LWDAQ_print $t
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$n $step " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i]] "
	}
	LWDAQ_print $t
	incr step
}
</script>

<script>
set data {0x6080 0x6480 0x4480 0x0480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0xC480 0x8480 0x4480 \
	0x0480 0xC480 0x8480 0xC480 0x8480 0x4480 0x0480 0x4480 0x0480 0x4480 \
	0x0480 0x4480 0x0480 0x4480 0x0480 0x4080}

set step 0
foreach n $data {
	set temporary [binary format S [expr $n]]
	binary scan $temporary B16 b
	LWDAQ_print -nonewline $t "$step $n " green
	for {set i 0} {$i < [string length $b]} {incr i} {
		LWDAQ_print -nonewline $t "[expr [string index $b $i]] "
	}
	LWDAQ_print $t
	incr step
}
</script>

<script>
set fnl [LWDAQ_get_file_name 1]
foreach fn $fnl {
	set ofn [regsub {\.avi} $fn {.mp4}]
	LWDAQ_print $t "$fn -> $ofn"
	if {[catch {exec /usr/local/bin/ffmpeg -i $fn -c:v copy $ofn} error_report]} {
		LWDAQ_print $t "ERROR: $error_report"
	}
}
</script>

<script>
set fnl [LWDAQ_get_file_name 1]
foreach fn $fnl {
	set ofn [regsub {\.avi} $fn {.mp4}]
	LWDAQ_print $t "$fn -> $ofn"
	if {[catch {exec /usr/local/bin/ffmpeg -i $fn -c:v copy $ofn} error_report]} {
		LWDAQ_print $t "ERROR: $error_report"
	}
}
</script>

